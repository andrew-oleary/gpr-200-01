Andrew O'Leary
gpr 200-01
lab5Image

// GLSL STARTER CODE BY DANIEL S. BUCKSTEIN

 // scene    bright      blur(v)        blur(h)If buffer d
// bufa->tex->bufb->tex->buffc->tex -> IMAGE TAB (final)

//color4 blend_add(in color4 a, in color b)
//{
//return(a+b);
//}
//color4 blend_mult(in color4 a, in color b)
//{
//return(a*b);
//}
//color4 blend_mix(in color4 a, in color4 b)

//color4 blend_screen(in color4, in color4 b)****
//{
  //  return;
//}

//------------------------------------------------------------
// SHADERTOY MAIN

// mainImage: process the current pixel (exactly one call per pixel)
//    fragColor: output final color for current pixel
//    fragCoord: input location of current pixel in image (in pixels)
void mainImage(out color4 fragColor, in sCoord fragCoord)
{
    // setup
    // test UV for input image
    sCoord uv0 = fragCoord / iChannelResolution[0].xy;
    sCoord uv1 = fragCoord / iChannelResolution[1].xy;
    sCoord uv2 = fragCoord / iChannelResolution[2].xy;
    // TESTING
    // set iChannel0 to 'Misc/Buffer A' and fetch sample
    //fragColor =texture(iChannel2, uv2);
   // fragColor =(texture(iChannel1, uv1)+texture(iChannel0, uv0));
    fragColor=mix(texture(iChannel0, uv0),texture(iChannel2, uv2),0.5); //blur on basic background
    
    //fragColor =texture(iChannel0, uv0);
    //inversion test 
    //fragColor =1.0- texture(iChannel0, uv);
}
